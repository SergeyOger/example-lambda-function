AWSTemplateFormatVersion: 2010-09-09
Description: The AWS CloudFormation template with simple Lambda function example

Parameters:

  TaskDumpBucketName:
    Type: String
    Description: Bucket name for storing records dump

Resources:

  TaskDumpBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref TaskDumpBucketName
      LifecycleConfiguration:
        Rules:
          ExpirationInDays: 30

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: example-lambda-execution-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: lambda-execution-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:CreateLogGroup'
                  - 'logs:PutLogEvents'
                Resource: "*"
              - Effect: Allow
                Action:
                  - 'cloudwatch:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:*
                Resource: !GetAtt TaskDumpBucket.Arn
      Path: /example/


  ExampleLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: minecraft-tool-deployment-bucket
        S3Key: minecraft-tool.zip
      FunctionName: server-scheduled-starter
      Handler: net.broscorp.handler.TaskSyncHandler::handleRequest
      MemorySize: 512
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
      Runtime: java11
      Timeout: 30
      Environment:
        Variables:
          TaskBuketName: !Ref TaskDumpBucket
          TasksBaseUrl: "https://jsonplaceholder.typicode.com/users/1/todos"
    DependsOn:
      - TaskDumpBucket
      - LambdaExecutionRole

